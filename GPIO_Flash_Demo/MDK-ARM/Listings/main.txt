; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\main.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\main.d --cpu=Cortex-M4.fp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\GPIO_Flash_Demo -I..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I.\RTE\_GPIO_Flash_Demo -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=525 -DSTM32F411xE -DUSE_STDPERIPH_DRIVER -DSTM32F411xE --omf_browse=.\objects\main.crf ..\main.c]
                          THUMB

                          AREA ||i.Delay||, CODE, READONLY, ALIGN=1

                  Delay PROC
;;;36     }
;;;37     void Delay(__IO uint32_t nCount)
000000  b501              PUSH     {r0,lr}
                  |L1.2|
;;;38     {
;;;39     		while(nCount--)
000002  9800              LDR      r0,[sp,#0]
000004  1e41              SUBS     r1,r0,#1
000006  9100              STR      r1,[sp,#0]
000008  d2fb              BCS      |L1.2|
;;;40     		{
;;;41     		}
;;;42     }
00000a  bd08              POP      {r3,pc}
;;;43     
                          ENDP


                          AREA ||i.GPIO_Configuration||, CODE, READONLY, ALIGN=2

                  GPIO_Configuration PROC
;;;19     
;;;20     void GPIO_Configuration(void)
000000  b570              PUSH     {r4-r6,lr}
;;;21     {		
;;;22     		RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD | RCC_AHB1Periph_GPIOA, ENABLE);
000002  2101              MOVS     r1,#1
000004  2009              MOVS     r0,#9
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;23     		/* Configure PB0 PB1 in output pushpull mode */
;;;24     		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12 | GPIO_Pin_13|GPIO_Pin_14 | GPIO_Pin_15;
00000a  4c0d              LDR      r4,|L2.64|
00000c  f44f4070          MOV      r0,#0xf000
;;;25     		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
000010  2501              MOVS     r5,#1
000012  6020              STR      r0,[r4,#0]  ; GPIO_InitStructure
000014  7125              STRB     r5,[r4,#4]
;;;26     		GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000016  2600              MOVS     r6,#0
000018  71a6              STRB     r6,[r4,#6]
;;;27     		GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
00001a  2003              MOVS     r0,#3
00001c  7160              STRB     r0,[r4,#5]
;;;28     		GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
00001e  71e5              STRB     r5,[r4,#7]
;;;29     		GPIO_Init(GPIOD, &GPIO_InitStructure);
000020  4621              MOV      r1,r4
000022  4808              LDR      r0,|L2.68|
000024  f7fffffe          BL       GPIO_Init
;;;30     		/* Configure PA0 in input mode */
;;;31     		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
;;;32     		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
000028  6025              STR      r5,[r4,#0]  ; GPIO_InitStructure
00002a  7126              STRB     r6,[r4,#4]
;;;33     		GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00002c  2002              MOVS     r0,#2
00002e  7160              STRB     r0,[r4,#5]
;;;34     		GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
000030  71e6              STRB     r6,[r4,#7]
;;;35     		GPIO_Init(GPIOA, &GPIO_InitStructure);
000032  4621              MOV      r1,r4
000034  e8bd4070          POP      {r4-r6,lr}
000038  4803              LDR      r0,|L2.72|
00003a  f7ffbffe          B.W      GPIO_Init
;;;36     }
;;;37     void Delay(__IO uint32_t nCount)
                          ENDP

00003e  0000              DCW      0x0000
                  |L2.64|
                          DCD      ||.data||
                  |L2.68|
                          DCD      0x40020c00
                  |L2.72|
                          DCD      0x40020000

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;6      
;;;7      int main(void)
000000  f7fffffe          BL       GPIO_Configuration
;;;8      {					
;;;9      		GPIO_Configuration();
;;;10     		GPIO_ResetBits(GPIOD,GPIO_Pin_12| GPIO_Pin_13|GPIO_Pin_14 | GPIO_Pin_15 );
000004  4c0a              LDR      r4,|L3.48|
000006  f44f4170          MOV      r1,#0xf000
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GPIO_ResetBits
;;;11     		while (1)
;;;12     		{		
;;;13     				if(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_0))
000010  4d08              LDR      r5,|L3.52|
;;;14     						GPIO_ToggleBits(GPIOD,GPIO_Pin_12);
000012  14a6              ASRS     r6,r4,#18
                  |L3.20|
000014  2101              MOVS     r1,#1                 ;13
000016  4628              MOV      r0,r5                 ;13
000018  f7fffffe          BL       GPIO_ReadInputDataBit
00001c  2800              CMP      r0,#0                 ;13
;;;15     				else
;;;16     						GPIO_ResetBits(GPIOD,GPIO_Pin_12);
00001e  4631              MOV      r1,r6
000020  4620              MOV      r0,r4
000022  d002              BEQ      |L3.42|
000024  f7fffffe          BL       GPIO_ToggleBits
000028  e7f4              B        |L3.20|
                  |L3.42|
00002a  f7fffffe          BL       GPIO_ResetBits
00002e  e7f1              B        |L3.20|
;;;17     		}
;;;18     }
;;;19     
                          ENDP

                  |L3.48|
                          DCD      0x40020c00
                  |L3.52|
                          DCD      0x40020000

                          AREA ||.data||, DATA, ALIGN=2

                  GPIO_InitStructure
                          %        8

;*** Start embedded assembler ***

#line 1 "..\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_main____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REVSH|
#line 144
|__asm___6_main_c_main____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
